[{"/Users/eswarraj/Documents/GitHub/MyPortfolioWebsite/src/index.js":"1","/Users/eswarraj/Documents/GitHub/MyPortfolioWebsite/src/App.jsx":"2"},{"size":363,"mtime":1754888881858,"results":"3","hashOfConfig":"4"},{"size":11260,"mtime":1754966692577,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nvxsac",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/eswarraj/Documents/GitHub/MyPortfolioWebsite/src/index.js",[],[],"/Users/eswarraj/Documents/GitHub/MyPortfolioWebsite/src/App.jsx",["12","13","14","15","16","17","18"],[],{"ruleId":"19","severity":1,"message":"20","line":64,"column":9,"nodeType":"21","messageId":"22","endLine":64,"endColumn":21},{"ruleId":"23","severity":1,"message":"24","line":71,"column":22,"nodeType":"25","endLine":73,"endColumn":15},{"ruleId":"26","severity":1,"message":"27","line":256,"column":15,"nodeType":"28","endLine":256,"endColumn":152},{"ruleId":"26","severity":1,"message":"27","line":261,"column":15,"nodeType":"28","endLine":261,"endColumn":156},{"ruleId":"26","severity":1,"message":"27","line":264,"column":15,"nodeType":"28","endLine":264,"endColumn":154},{"ruleId":"26","severity":1,"message":"27","line":267,"column":15,"nodeType":"28","endLine":267,"endColumn":154},{"ruleId":"26","severity":1,"message":"27","line":270,"column":15,"nodeType":"28","endLine":270,"endColumn":155},"no-unused-vars","'pulseTimeout' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'pulseTimeout' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]